name: Build and deploy dev-gcp
on: workflow_dispatch

env:
  CI: true
  DOCKER_IMAGE: docker.pkg.github.com/${{ github.repository }}/${{ github.event.repository.name }}

jobs:
  build:
    name: Build and push docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: "12.8.1"
      - uses: actions/checkout@v1
      - uses: actions/cache@v1.1.2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Copy env-file
        run: cp nais/dev/.env .env.local
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm run test
      - name: Build application
        run: npm run build
      - name: Login to GitHub package registry
        run: |
          echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_REPOSITORY} --password-stdin docker.pkg.github.com
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create artifact version
        id: artifact-version
        uses: navikt/sosialhjelp-ci/actions/create-artifact-version@master
      - name: Create docker image tags
        run: |
          echo "DOCKER_TAG=${{ env.DOCKER_IMAGE }}:${{ steps.artifact-version.outputs.version }}" >> $GITHUB_ENV
      - name: Build docker image
        run: docker build -t ${{ env.DOCKER_TAG }} .
      - name: Create tag and release
        uses: actions/create-release@v1.1.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.artifact-version.outputs.version }}
          release_name: ${{ steps.artifact-version.outputs.version }}
          commitish: ${{ github.sha }}
      - name: Push docker image
        run: |
          docker push ${{ env.DOCKER_TAG }}
      - name: output docker image tag
        id: docker-tag
        run: |
          echo "::set-output name=IMAGE_TAG::${{ env.DOCKER_TAG }}"

  deploy:
    name: Deploy to dev-gcp
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Deploy til GCP
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          RESOURCE: nais.yaml
          CLUSTER: dev-gcp
          VARS: nais/dev/dev-gcp.json
          REF: ${{ github.sha }}
          PRINT_PAYLOAD: true
          IMAGE: ${{ needs.build.outputs.IMAGE_TAG }}