name: Build and deploy dev-gcp
on:
  push:
    branches:
      - "redeploy-fix"

env:
  CI: true
  DOCKER_IMAGE: docker.pkg.github.com/${{ github.repository }}/${{ github.event.repository.name }}

jobs:
  check-tag:
    name: Get git tag for commit
    outputs:
      TAG_EXISTS_OUTPUT: ${{ steps.check-tag.outputs.TAG_EXISTS_OUTPUT }}
      ARTIFACT_VERSION: ${{ steps.artifact-version.outputs.version }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Create artifact version
        id: artifact-version
        run: |
          echo "::set-output name=version::1.1_20200813.1617_84c8e46"
      #        uses: navikt/sosialhjelp-ci/actions/create-artifact-version@master
      - name: Check if tag exists
        id: check-tag
        run: |
          TAG_EXISTS_OUTPUT=$(git tag --list ${{ steps.artifact-version.outputs.version }})
          echo "::set-output name=TAG_EXISTS_OUTPUT::$TAG_EXISTS_OUTPUT"
  build:
    name: Build and push docker image
    needs: check-tag
    if: needs.check-tag.outputs.TAG_EXISTS_OUTPUT != needs.check-tag.outputs.ARTIFACT_VERSION
    runs-on: ubuntu-latest
    outputs:
      IMAGE_TAG: ${{ steps.docker-tag.outputs.IMAGE_TAG }}
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: "12.8.1"
      - uses: actions/checkout@v1
#      - uses: actions/cache@v1.1.2
#        with:
#          path: ~/.npm
#          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
#          restore-keys: ${{ runner.os }}-node-
#      - name: Copy env-file
#        run: cp nais/dev/.env .env.local
#      - name: Install dependencies
#        run: npm ci
#      - name: Run tests
#        run: npm run test
#      - name: Build application
#        run: npm run build
#      - name: Login to GitHub package registry
#        run: |
#          echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_REPOSITORY} --password-stdin docker.pkg.github.com
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      - name: Create artifact version
#        id: artifact-version
#        run: |
#         echo "::set-output name=version::1.1_20200813.1617_84c8e46"
#        uses: navikt/sosialhjelp-ci/actions/create-artifact-version@master
#      - name: Create docker image tags
#        run: |
#          echo "DOCKER_TAG=${{ env.DOCKER_IMAGE }}:${{ steps.artifact-version.outputs.version }}" >> $GITHUB_ENV
      - name: Echo TAG_EXISTS_OUTPUT if not existing
        run: |
          echo "Job is running"
#      - name: Create tag and release
#        if: env.DOCKER_TAG != env.TAG_EXISTS_OUTPUT
#        uses: actions/create-release@v1.1.3
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ steps.artifact-version.outputs.version }}
#          release_name: ${{ steps.artifact-version.outputs.version }}
#          commitish: ${{ github.sha }}
#      - name: Build docker image
#        if: ${{ env.DOCKER_TAG }} != ${{ env.TAG_EXISTS_OUTPUT }}
#        run: docker build -t ${{ env.DOCKER_TAG }} .
#      - name: Push docker image
#        if: ${{ env.DOCKER_TAG }} != ${{ env.TAG_EXISTS_OUTPUT }}
#        run: |
#          docker push ${{ env.DOCKER_TAG }}
#      - name: Output docker image tag
#        id: docker-tag
#        run: |
#          echo "::set-output name=IMAGE_TAG::${{ env.DOCKER_TAG }}"

#  deploy:
#    name: Deploy to dev-gcp
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - name: Echo output from build step
#        run: |
#          echo $${{ needs.build.outputs.IMAGE_TAG }}
#      - uses: actions/checkout@v1
#      - name: Deploy til GCP
#        uses: nais/deploy/actions/deploy@v1
#        env:
#          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
#          RESOURCE: nais.yaml
#          CLUSTER: dev-gcp
#          VARS: nais/dev/dev-gcp.json
#          REF: ${{ github.sha }}
#          PRINT_PAYLOAD: true
#          IMAGE: ${{ needs.build.outputs.IMAGE_TAG }}